// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lockbox.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GeneratePasswordRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeneratePasswordRequest) Reset()         { *m = GeneratePasswordRequest{} }
func (m *GeneratePasswordRequest) String() string { return proto.CompactTextString(m) }
func (*GeneratePasswordRequest) ProtoMessage()    {}
func (*GeneratePasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_91756a307157fa4b, []int{0}
}

func (m *GeneratePasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeneratePasswordRequest.Unmarshal(m, b)
}
func (m *GeneratePasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeneratePasswordRequest.Marshal(b, m, deterministic)
}
func (m *GeneratePasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeneratePasswordRequest.Merge(m, src)
}
func (m *GeneratePasswordRequest) XXX_Size() int {
	return xxx_messageInfo_GeneratePasswordRequest.Size(m)
}
func (m *GeneratePasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GeneratePasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GeneratePasswordRequest proto.InternalMessageInfo

type GeneratePasswordResponse struct {
	Password             string   `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeneratePasswordResponse) Reset()         { *m = GeneratePasswordResponse{} }
func (m *GeneratePasswordResponse) String() string { return proto.CompactTextString(m) }
func (*GeneratePasswordResponse) ProtoMessage()    {}
func (*GeneratePasswordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91756a307157fa4b, []int{1}
}

func (m *GeneratePasswordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeneratePasswordResponse.Unmarshal(m, b)
}
func (m *GeneratePasswordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeneratePasswordResponse.Marshal(b, m, deterministic)
}
func (m *GeneratePasswordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeneratePasswordResponse.Merge(m, src)
}
func (m *GeneratePasswordResponse) XXX_Size() int {
	return xxx_messageInfo_GeneratePasswordResponse.Size(m)
}
func (m *GeneratePasswordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GeneratePasswordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GeneratePasswordResponse proto.InternalMessageInfo

func (m *GeneratePasswordResponse) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func init() {
	proto.RegisterType((*GeneratePasswordRequest)(nil), "rpc.GeneratePasswordRequest")
	proto.RegisterType((*GeneratePasswordResponse)(nil), "rpc.GeneratePasswordResponse")
}

func init() {
	proto.RegisterFile("lockbox.proto", fileDescriptor_91756a307157fa4b)
}

var fileDescriptor_91756a307157fa4b = []byte{
	// 140 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0xc9, 0x4f, 0xce,
	0x4e, 0xca, 0xaf, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2e, 0x2a, 0x48, 0x56, 0x92,
	0xe4, 0x12, 0x77, 0x4f, 0xcd, 0x4b, 0x2d, 0x4a, 0x2c, 0x49, 0x0d, 0x48, 0x2c, 0x2e, 0x2e, 0xcf,
	0x2f, 0x4a, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x51, 0x32, 0xe3, 0x92, 0xc0, 0x94, 0x2a,
	0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0x92, 0xe2, 0xe2, 0x28, 0x80, 0x8a, 0x49, 0x30, 0x2a, 0x30,
	0x6a, 0x70, 0x06, 0xc1, 0xf9, 0x46, 0x89, 0x5c, 0x7c, 0x3e, 0x10, 0x8b, 0x82, 0x53, 0x8b, 0xca,
	0x32, 0x93, 0x53, 0x85, 0xfc, 0xb9, 0x04, 0xd0, 0x4d, 0x12, 0x92, 0xd1, 0x2b, 0x2a, 0x48, 0xd6,
	0xc3, 0x61, 0xb7, 0x94, 0x2c, 0x0e, 0x59, 0x88, 0xf5, 0x49, 0x6c, 0x60, 0x1f, 0x18, 0x03, 0x02,
	0x00, 0x00, 0xff, 0xff, 0xc6, 0x4d, 0xe6, 0xd7, 0xd2, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LockboxServiceClient is the client API for LockboxService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LockboxServiceClient interface {
	GeneratePassword(ctx context.Context, in *GeneratePasswordRequest, opts ...grpc.CallOption) (*GeneratePasswordResponse, error)
}

type lockboxServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLockboxServiceClient(cc grpc.ClientConnInterface) LockboxServiceClient {
	return &lockboxServiceClient{cc}
}

func (c *lockboxServiceClient) GeneratePassword(ctx context.Context, in *GeneratePasswordRequest, opts ...grpc.CallOption) (*GeneratePasswordResponse, error) {
	out := new(GeneratePasswordResponse)
	err := c.cc.Invoke(ctx, "/rpc.LockboxService/GeneratePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LockboxServiceServer is the server API for LockboxService service.
type LockboxServiceServer interface {
	GeneratePassword(context.Context, *GeneratePasswordRequest) (*GeneratePasswordResponse, error)
}

// UnimplementedLockboxServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLockboxServiceServer struct {
}

func (*UnimplementedLockboxServiceServer) GeneratePassword(ctx context.Context, req *GeneratePasswordRequest) (*GeneratePasswordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GeneratePassword not implemented")
}

func RegisterLockboxServiceServer(s *grpc.Server, srv LockboxServiceServer) {
	s.RegisterService(&_LockboxService_serviceDesc, srv)
}

func _LockboxService_GeneratePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GeneratePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LockboxServiceServer).GeneratePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.LockboxService/GeneratePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LockboxServiceServer).GeneratePassword(ctx, req.(*GeneratePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LockboxService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.LockboxService",
	HandlerType: (*LockboxServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GeneratePassword",
			Handler:    _LockboxService_GeneratePassword_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lockbox.proto",
}
