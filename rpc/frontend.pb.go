// Code generated by protoc-gen-go. DO NOT EDIT.
// source: frontend.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NotifyCrackedRequest struct {
	CrackerId            string   `protobuf:"bytes,1,opt,name=cracker_id,json=crackerId,proto3" json:"cracker_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotifyCrackedRequest) Reset()         { *m = NotifyCrackedRequest{} }
func (m *NotifyCrackedRequest) String() string { return proto.CompactTextString(m) }
func (*NotifyCrackedRequest) ProtoMessage()    {}
func (*NotifyCrackedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eca3873955a29cfe, []int{0}
}

func (m *NotifyCrackedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyCrackedRequest.Unmarshal(m, b)
}
func (m *NotifyCrackedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyCrackedRequest.Marshal(b, m, deterministic)
}
func (m *NotifyCrackedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyCrackedRequest.Merge(m, src)
}
func (m *NotifyCrackedRequest) XXX_Size() int {
	return xxx_messageInfo_NotifyCrackedRequest.Size(m)
}
func (m *NotifyCrackedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyCrackedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyCrackedRequest proto.InternalMessageInfo

func (m *NotifyCrackedRequest) GetCrackerId() string {
	if m != nil {
		return m.CrackerId
	}
	return ""
}

type NotifyCrackedResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotifyCrackedResponse) Reset()         { *m = NotifyCrackedResponse{} }
func (m *NotifyCrackedResponse) String() string { return proto.CompactTextString(m) }
func (*NotifyCrackedResponse) ProtoMessage()    {}
func (*NotifyCrackedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eca3873955a29cfe, []int{1}
}

func (m *NotifyCrackedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyCrackedResponse.Unmarshal(m, b)
}
func (m *NotifyCrackedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyCrackedResponse.Marshal(b, m, deterministic)
}
func (m *NotifyCrackedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyCrackedResponse.Merge(m, src)
}
func (m *NotifyCrackedResponse) XXX_Size() int {
	return xxx_messageInfo_NotifyCrackedResponse.Size(m)
}
func (m *NotifyCrackedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyCrackedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyCrackedResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*NotifyCrackedRequest)(nil), "rpc.NotifyCrackedRequest")
	proto.RegisterType((*NotifyCrackedResponse)(nil), "rpc.NotifyCrackedResponse")
}

func init() {
	proto.RegisterFile("frontend.proto", fileDescriptor_eca3873955a29cfe)
}

var fileDescriptor_eca3873955a29cfe = []byte{
	// 145 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0x2b, 0xca, 0xcf,
	0x2b, 0x49, 0xcd, 0x4b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2e, 0x2a, 0x48, 0x56,
	0x32, 0xe5, 0x12, 0xf1, 0xcb, 0x2f, 0xc9, 0x4c, 0xab, 0x74, 0x2e, 0x4a, 0x4c, 0xce, 0x4e, 0x4d,
	0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x92, 0xe5, 0xe2, 0x4a, 0x06, 0x8b, 0x14, 0xc5,
	0x67, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x71, 0x42, 0x45, 0x3c, 0x53, 0x94, 0xc4,
	0xb9, 0x44, 0xd1, 0xb4, 0x15, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x1a, 0x45, 0x72, 0xf1, 0xbb, 0x41,
	0xad, 0x09, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x15, 0x72, 0xe3, 0xe2, 0x45, 0x51, 0x2b, 0x24,
	0xa9, 0x57, 0x54, 0x90, 0xac, 0x87, 0xcd, 0x5a, 0x29, 0x29, 0x6c, 0x52, 0x10, 0xa3, 0x93, 0xd8,
	0xc0, 0xce, 0x36, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x84, 0x76, 0xa2, 0x55, 0xc8, 0x00, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FrontendServiceClient is the client API for FrontendService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FrontendServiceClient interface {
	NotifyCracked(ctx context.Context, in *NotifyCrackedRequest, opts ...grpc.CallOption) (*NotifyCrackedResponse, error)
}

type frontendServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFrontendServiceClient(cc grpc.ClientConnInterface) FrontendServiceClient {
	return &frontendServiceClient{cc}
}

func (c *frontendServiceClient) NotifyCracked(ctx context.Context, in *NotifyCrackedRequest, opts ...grpc.CallOption) (*NotifyCrackedResponse, error) {
	out := new(NotifyCrackedResponse)
	err := c.cc.Invoke(ctx, "/rpc.FrontendService/NotifyCracked", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FrontendServiceServer is the server API for FrontendService service.
type FrontendServiceServer interface {
	NotifyCracked(context.Context, *NotifyCrackedRequest) (*NotifyCrackedResponse, error)
}

// UnimplementedFrontendServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFrontendServiceServer struct {
}

func (*UnimplementedFrontendServiceServer) NotifyCracked(ctx context.Context, req *NotifyCrackedRequest) (*NotifyCrackedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotifyCracked not implemented")
}

func RegisterFrontendServiceServer(s *grpc.Server, srv FrontendServiceServer) {
	s.RegisterService(&_FrontendService_serviceDesc, srv)
}

func _FrontendService_NotifyCracked_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotifyCrackedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendServiceServer).NotifyCracked(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.FrontendService/NotifyCracked",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendServiceServer).NotifyCracked(ctx, req.(*NotifyCrackedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FrontendService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.FrontendService",
	HandlerType: (*FrontendServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NotifyCracked",
			Handler:    _FrontendService_NotifyCracked_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "frontend.proto",
}
